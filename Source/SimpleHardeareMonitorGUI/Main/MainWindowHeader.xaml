<UserControl x:Class="SimpleHardwareMonitorGUI.Main.MainWindowHeader"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:SimpleHardwareMonitorGUI.Main"
             xmlns:buttonHelper="clr-namespace:SimpleOverlayTheme.Object.ButtonObject.Helper;assembly=SimpleOverlayTheme"
             xmlns:customControl="clr-namespace:SimpleOverlayTheme.CustomControl;assembly=SimpleOverlayTheme"
             mc:Ignorable="d" d:Width="800" d:Height="40">
    <UserControl.Resources>
        <ResourceDictionary>
            <ImageBrush x:Key="logImage" ImageSource="pack://application:,,,/SimpleHardwareMonitorGUI;component/Resource/PhosphorIcons-HardDrivesThin.png" Stretch="Uniform"/>
            <ImageBrush x:Key="lockImage" ImageSource="pack://application:,,,/SimpleHardwareMonitorGUI;component/Resource/BootstrapIcons-Lock.png" Stretch="Uniform"/>
            <ImageBrush x:Key="unlockImage" ImageSource="pack://application:,,,/SimpleHardwareMonitorGUI;component/Resource/BootstrapIcons-Unlock.png" Stretch="Uniform"/>
            <ImageBrush x:Key="settingImage" ImageSource="pack://application:,,,/SimpleHardwareMonitorGUI;component/Resource/PhosphorIcons-GearSixThin.png" Stretch="Uniform"/>
        </ResourceDictionary>
    </UserControl.Resources>
    <UserControl.Content>
        <Grid >
            <Grid.Background>#60808080
            </Grid.Background>
            <customControl:WindowHeader x:Name="WindowHeaderControl">
                <customControl:WindowHeader.TitleContent>
                    <Binding Path="MainWindowTitle" RelativeSource="{RelativeSource AncestorType=UserControl}" d:FallbackValue="Title"/>
                </customControl:WindowHeader.TitleContent>
                <customControl:WindowHeader.ShowToggleMaximizeRestore>Collapsed
                </customControl:WindowHeader.ShowToggleMaximizeRestore>
                <customControl:WindowHeader.UseDoubleClickMaximizeRestore>False
                </customControl:WindowHeader.UseDoubleClickMaximizeRestore>
                <customControl:WindowHeader.FontSize>32
                </customControl:WindowHeader.FontSize>
                <customControl:WindowHeader.SideContent>
                    <StackPanel x:Name="SideContentPenel" Orientation="Horizontal">
                        <ToggleButton>
                            <ToggleButton.Width>
                                <Binding Path="ActualHeight" ElementName="SideContentPenel"/>
                            </ToggleButton.Width>
                            <ToggleButton.Height>
                                <Binding Path="ActualHeight" ElementName="SideContentPenel"/>
                            </ToggleButton.Height>
                            <ToggleButton.BorderThickness>0
                            </ToggleButton.BorderThickness>
                            <ToggleButton.IsChecked>
                                <Binding Path="MainWindowLogging" RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type local:MainWindowHeader}}" Mode="TwoWay"/>
                            </ToggleButton.IsChecked>
                            <ToggleButton.IsEnabled>
                                <Binding Path="WindowUnlocked" RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type customControl:WindowHeader}}"/>
                            </ToggleButton.IsEnabled>
                            <ToggleButton.Background>Transparent
                            </ToggleButton.Background>
                            <ToggleButton.Style>
                                <Style TargetType="ToggleButton" BasedOn="{StaticResource SimpleOverlayTheme.ToggleButton.ImageMask}">
                                    <Style.Triggers>
                                        <Trigger Property="IsChecked" Value="True">
                                            <Setter Property="Foreground" Value="#A040FF40"/>
                                        </Trigger>
                                        <Trigger Property="IsChecked" Value="False">
                                            <Setter Property="Foreground" Value="#A0BF7815"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </ToggleButton.Style>
                            <buttonHelper:Mask.MaskBrushDefault>
                                <DynamicResource ResourceKey="logImage"/>
                            </buttonHelper:Mask.MaskBrushDefault>
                            <buttonHelper:Mask.MaskBrushChecked>
                                <DynamicResource ResourceKey="logImage"/>
                            </buttonHelper:Mask.MaskBrushChecked>
                            <buttonHelper:OverlayCheckedBackground.Background>Transparent
                            </buttonHelper:OverlayCheckedBackground.Background>
                            <buttonHelper:OverlayBackground.SetDefaultVisible>False
                            </buttonHelper:OverlayBackground.SetDefaultVisible>
                            <buttonHelper:OverlayBackground.SetOutlineVisible>False
                            </buttonHelper:OverlayBackground.SetOutlineVisible>
                            <buttonHelper:OverlayBackground.SetBackgroundVisible>False
                            </buttonHelper:OverlayBackground.SetBackgroundVisible>
                        </ToggleButton>
                        <ToggleButton>
                            <ToggleButton.Width>
                                <Binding Path="ActualHeight" ElementName="SideContentPenel"/>
                            </ToggleButton.Width>
                            <ToggleButton.Height>
                                <Binding Path="ActualHeight" ElementName="SideContentPenel"/>
                            </ToggleButton.Height>
                            <ToggleButton.BorderThickness>0
                            </ToggleButton.BorderThickness>
                            <ToggleButton.IsChecked>
                                <Binding Path="WindowUnlocked" RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type customControl:WindowHeader}}" Mode="TwoWay"/>
                            </ToggleButton.IsChecked>
                            <d:ToggleButton.IsChecked>True
                            </d:ToggleButton.IsChecked>
                            <ToggleButton.Background>Transparent
                            </ToggleButton.Background>
                            <ToggleButton.Style>
                                <StaticResource ResourceKey="SimpleOverlayTheme.ToggleButton.ImageMask"/>
                            </ToggleButton.Style>
                            <buttonHelper:Mask.MaskBrushDefault>
                                <DynamicResource ResourceKey="lockImage"/>
                            </buttonHelper:Mask.MaskBrushDefault>
                            <buttonHelper:Mask.MaskBrushChecked>
                                <DynamicResource ResourceKey="unlockImage"/>
                            </buttonHelper:Mask.MaskBrushChecked>
                            <buttonHelper:OverlayCheckedBackground.Background>Transparent
                            </buttonHelper:OverlayCheckedBackground.Background>
                            <buttonHelper:OverlayBackground.SetDefaultVisible>False
                            </buttonHelper:OverlayBackground.SetDefaultVisible>
                            <buttonHelper:OverlayBackground.SetOutlineVisible>False
                            </buttonHelper:OverlayBackground.SetOutlineVisible>
                            <buttonHelper:OverlayBackground.SetBackgroundVisible>False
                            </buttonHelper:OverlayBackground.SetBackgroundVisible>
                        </ToggleButton>
                        <Button Click="Setting_Click">
                            <Button.Width>
                                <Binding Path="ActualHeight" ElementName="SideContentPenel"/>
                            </Button.Width>
                            <Button.Height>
                                <Binding Path="ActualHeight" ElementName="SideContentPenel"/>
                            </Button.Height>
                            <Button.BorderThickness>0
                            </Button.BorderThickness>
                            <Button.IsEnabled>
                                <Binding Path="WindowUnlocked" RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type customControl:WindowHeader}}"/>
                            </Button.IsEnabled>
                            <Button.Background>Transparent
                            </Button.Background>
                            <Button.Style>
                                <StaticResource ResourceKey="SimpleOverlayTheme.Button.ImageMask"/>
                            </Button.Style>
                            <buttonHelper:Mask.MaskBrushDefault>
                                <DynamicResource ResourceKey="settingImage"/>
                            </buttonHelper:Mask.MaskBrushDefault>
                            <buttonHelper:OverlayBackground.SetDefaultVisible>False
                            </buttonHelper:OverlayBackground.SetDefaultVisible>
                            <buttonHelper:OverlayBackground.SetOutlineVisible>False
                            </buttonHelper:OverlayBackground.SetOutlineVisible>
                            <buttonHelper:OverlayBackground.SetBackgroundVisible>False
                            </buttonHelper:OverlayBackground.SetBackgroundVisible>
                        </Button>
                    </StackPanel>
                </customControl:WindowHeader.SideContent>
            </customControl:WindowHeader>
        </Grid>
    </UserControl.Content>
    <UserControl.Style>
        <StaticResource ResourceKey="SimpleOverlayTheme.UserControl.Default"/>
    </UserControl.Style>
</UserControl>