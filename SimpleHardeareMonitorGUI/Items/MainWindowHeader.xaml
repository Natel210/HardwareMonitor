<UserControl x:Class="SimpleHardwareMonitorGUI.Items.MainWindowHeader"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:SimpleHardwareMonitorGUI.Items"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             mc:Ignorable="d" 
             d:Width="{StaticResource MainWindowWidth}"
             d:Height="{StaticResource MainWindowHeaderHeight}"
             Style="{StaticResource GrayThemeUI.UserControl}">
    <UserControl.Resources>
        <ImageBrush x:Key="logImage" ImageSource="pack://application:,,,/SimpleHardwareMonitorGUI;component/resource/PhosphorIcons-HardDrivesThin.png" Stretch="Uniform"/>
        <ImageBrush x:Key="lockImage" ImageSource="pack://application:,,,/SimpleHardwareMonitorGUI;component/resource/BootstrapIcons-Lock.png" Stretch="Uniform"/>
        <ImageBrush x:Key="unlockImage" ImageSource="pack://application:,,,/SimpleHardwareMonitorGUI;component/resource/BootstrapIcons-Unlock.png" Stretch="Uniform"/>
        <ImageBrush x:Key="settingImage" ImageSource="pack://application:,,,/SimpleHardwareMonitorGUI;component/resource/PhosphorIcons-GearSixThin.png" Stretch="Uniform"/>
        <ImageBrush x:Key="minimizeImage" ImageSource="pack://application:,,,/SimpleHardwareMonitorGUI;component/resource/PhosphorIcons-MinusThin.png" Stretch="Uniform"/>
        <ImageBrush x:Key="cancelImage" ImageSource="pack://application:,,,/SimpleHardwareMonitorGUI;component/resource/PhosphorIcons-XThin.png" Stretch="Uniform"/>
    </UserControl.Resources>
    <Grid Background="Black">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="Auto"/>
        </Grid.ColumnDefinitions>
        <Border Grid.Column="0">
            <Label Content="Monitor" FontSize="32"  Margin="5,0" Style="{StaticResource GrayThemeUI.Label}" Background="Transparent"/>
        </Border>
        <StackPanel Grid.Column="1" Orientation="Horizontal">
            <Border x:Name="loggingButton">
                <ToggleButton Background="Transparent" BorderThickness="0" 
                              Width="{StaticResource MainWindowHeaderHeight}"
                              Height="{StaticResource MainWindowHeaderHeight}"
                              IsChecked="{Binding Logging, RelativeSource={RelativeSource AncestorType=UserControl}}"
                              Checked="Logging_Checked"
                              Unchecked="Logging_Unchecked">
                    <ToggleButton.Style>
                        <Style TargetType="ToggleButton">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="ToggleButton">
                                        <Grid>
                                            <Border x:Name="border" Background="Transparent"
                                                    BorderBrush="{TemplateBinding BorderBrush}"
                                                    BorderThickness="{TemplateBinding BorderThickness}"
                                                    Width="{TemplateBinding Width}"
                                                    Height="{TemplateBinding Height}">
                                                <Grid>
                                                    <Border x:Name="Mask"
                                                            Background="#9CB45300"
                                                            Width="35" Height="35"
                                                            OpacityMask="{DynamicResource logImage}">
                                                    </Border>
                                                    <Border x:Name="overlayMask"
                                                            Background="{DynamicResource GrayThemeUI.Overlay.BorderBrush.Default}"
                                                            Width="35" Height="35"
                                                            OpacityMask="{DynamicResource logImage}">
                                                    </Border>
                                                </Grid>
                                            </Border>
                                            <Border x:Name="overlay"
                                                    Background="Transparent"
                                                    BorderBrush="Transparent"
                                                    BorderThickness="0"
                                                    Width="{TemplateBinding Width}"
                                                    Height="{TemplateBinding Height}"/>
                                        </Grid>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter TargetName="overlay" Property="BorderBrush" Value="{DynamicResource GrayThemeUI.Overlay.BorderBrush.MouseOver}"/>
                                                <Setter TargetName="overlay" Property="Background" Value="{DynamicResource GrayThemeUI.Overlay.Background.MouseOver}"/>
                                                <Setter TargetName="overlayMask" Property="Background" Value="{DynamicResource GrayThemeUI.Overlay.BorderBrush.MouseOver}"/>
                                            </Trigger>
                                            <Trigger Property="IsChecked" Value="True">
                                                <Setter TargetName="Mask" Property="Background" Value="#FF00FF00"/>
                                                <Setter TargetName="overlayMask" Property="Background" Value="{DynamicResource GrayThemeUI.Overlay.BorderBrush.MouseOver}"/>
                                            </Trigger>
                                            <Trigger Property="IsPressed" Value="True">
                                                <Setter TargetName="overlay" Property="BorderBrush" Value="{DynamicResource GrayThemeUI.Overlay.BorderBrush.Focus}"/>
                                                <Setter TargetName="overlay" Property="Background" Value="{DynamicResource GrayThemeUI.Overlay.Background.Focus}"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ToggleButton.Style>
                </ToggleButton>
            </Border>
            <Border>
                <ToggleButton x:Name="lockButton" Background="Transparent" BorderThickness="0" 
                              Width="{StaticResource MainWindowHeaderHeight}"
                              Height="{StaticResource MainWindowHeaderHeight}"
                              Checked="Lock_Checked"
                              Unchecked="Lock_Unchecked">
                    <ToggleButton.Style>
                        <Style TargetType="ToggleButton">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="ToggleButton">
                                        <Grid>
                                            <Border x:Name="border" Background="Transparent"
                                                    BorderBrush="{TemplateBinding BorderBrush}"
                                                    BorderThickness="{TemplateBinding BorderThickness}"
                                                    Width="{TemplateBinding Width}"
                                                    Height="{TemplateBinding Height}">
                                                <Grid>
                                                    <Border x:Name="Mask"
                                                            Background="{TemplateBinding Foreground}"
                                                            Width="35" Height="35"
                                                            OpacityMask="{DynamicResource unlockImage}">
                                                    </Border>
                                                    <Border x:Name="overlayMask"
                                                            Background="{DynamicResource GrayThemeUI.Overlay.BorderBrush.Default}"
                                                            Width="35" Height="35"
                                                            OpacityMask="{DynamicResource unlockImage}">
                                                    </Border>
                                                </Grid>
                                            </Border>
                                            <Border x:Name="overlay"
                                                    Background="Transparent"
                                                    BorderBrush="Transparent"
                                                    BorderThickness="0"
                                                    Width="{TemplateBinding Width}"
                                                    Height="{TemplateBinding Height}"/>
                                        </Grid>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter TargetName="overlay" Property="BorderBrush" Value="{DynamicResource GrayThemeUI.Overlay.BorderBrush.MouseOver}"/>
                                                <Setter TargetName="overlay" Property="Background" Value="{DynamicResource GrayThemeUI.Overlay.Background.MouseOver}"/>
                                                <Setter TargetName="overlayMask" Property="Background" Value="{DynamicResource GrayThemeUI.Overlay.BorderBrush.MouseOver}"/>
                                            </Trigger>
                                            <Trigger Property="IsChecked" Value="True">
                                                <Setter TargetName="Mask" Property="OpacityMask" Value="{DynamicResource lockImage}"/>
                                                <Setter TargetName="overlayMask" Property="OpacityMask" Value="{DynamicResource lockImage}"/>
                                                <Setter TargetName="overlayMask" Property="Background" Value="{DynamicResource GrayThemeUI.Overlay.BorderBrush.Focus}"/>
                                            </Trigger>
                                            <Trigger Property="IsEnabled" Value="False">
                                                <Setter TargetName="overlay" Property="BorderBrush" Value="{DynamicResource GrayThemeUI.Overlay.BorderBrush.Disable}"/>
                                                <Setter TargetName="overlay" Property="Background" Value="{DynamicResource GrayThemeUI.Overlay.Background.Disable}"/>
                                                <Setter TargetName="overlayMask" Property="Background" Value="{DynamicResource GrayThemeUI.Overlay.BorderBrush.Disable}"/>
                                            </Trigger>
                                            <Trigger Property="IsPressed" Value="True">
                                                <Setter TargetName="overlay" Property="BorderBrush" Value="{DynamicResource GrayThemeUI.Overlay.BorderBrush.Focus}"/>
                                                <Setter TargetName="overlay" Property="Background" Value="{DynamicResource GrayThemeUI.Overlay.Background.Focus}"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                            <Style.Triggers>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Foreground" Value="{DynamicResource GrayThemeUI.Theme.Foreground.Disable}"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </ToggleButton.Style>
                </ToggleButton>
            </Border>
            <Border x:Name="settingButton">
                <Button Background="Transparent" Click="Setting_Click" BorderThickness="0" 
                    Width="{StaticResource MainWindowHeaderHeight}"
                    Height="{StaticResource MainWindowHeaderHeight}">
                    <Button.Style>
                        <Style TargetType="Button">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="Button">
                                        <Grid>
                                            <Border x:Name="border" Background="Transparent"
                                                    BorderBrush="{TemplateBinding BorderBrush}"
                                                    BorderThickness="{TemplateBinding BorderThickness}"
                                                    Width="{TemplateBinding Width}"
                                                    Height="{TemplateBinding Height}">
                                                <Grid>
                                                    <Border x:Name="Mask"
                                                            Background="{TemplateBinding Foreground}"
                                                            Width="40" Height="40"
                                                            OpacityMask="{DynamicResource settingImage}">
                                                    </Border>
                                                    <Border x:Name="overlayMask"
                                                            Background="{DynamicResource GrayThemeUI.Overlay.BorderBrush.Default}"
                                                            Width="40" Height="40"
                                                            OpacityMask="{DynamicResource settingImage}">
                                                    </Border>
                                                </Grid>
                                            </Border>
                                            <Border x:Name="overlay"
                                                    Background="Transparent"
                                                    BorderBrush="Transparent"
                                                    BorderThickness="0"
                                                    Width="{TemplateBinding Width}"
                                                    Height="{TemplateBinding Height}"/>
                                        </Grid>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter TargetName="overlay" Property="BorderBrush" Value="{DynamicResource GrayThemeUI.Overlay.BorderBrush.MouseOver}"/>
                                                <Setter TargetName="overlay" Property="Background" Value="{DynamicResource GrayThemeUI.Overlay.Background.MouseOver}"/>
                                                <Setter TargetName="overlayMask" Property="Background" Value="{DynamicResource GrayThemeUI.Overlay.BorderBrush.MouseOver}"/>
                                            </Trigger>
                                            <Trigger Property="IsPressed" Value="True">
                                                <Setter TargetName="overlay" Property="BorderBrush" Value="{DynamicResource GrayThemeUI.Overlay.BorderBrush.Focus}"/>
                                                <Setter TargetName="overlay" Property="Background" Value="{DynamicResource GrayThemeUI.Overlay.Background.Focus}"/>
                                                <Setter TargetName="overlayMask" Property="Background" Value="{DynamicResource GrayThemeUI.Overlay.BorderBrush.Focus}"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </Button.Style>
                </Button>
            </Border>
            <Border x:Name="minimizationButton">
                <Button Background="Transparent" Click="Minimize_Click" BorderThickness="0" 
                        Width="{StaticResource MainWindowHeaderHeight}"
                        Height="{StaticResource MainWindowHeaderHeight}">
                    <Button.Style>
                        <Style TargetType="Button">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="Button">
                                        <Grid>
                                            <Border x:Name="border" Background="Transparent"
                                            BorderBrush="{TemplateBinding BorderBrush}"
                                            BorderThickness="{TemplateBinding BorderThickness}"
                                            Width="{TemplateBinding Width}"
                                            Height="{TemplateBinding Height}">
                                                <Grid Margin="0,25,0,0">
                                                    <Border x:Name="Mask"
                                                            Background="{TemplateBinding Foreground}"
                                                            Width="30" Height="30"
                                                            OpacityMask="{DynamicResource minimizeImage}">
                                                    </Border>
                                                    <Border x:Name="overlayMask"
                                                            Background="{DynamicResource GrayThemeUI.Overlay.BorderBrush.Default}"
                                                            Width="30" Height="30"
                                                            OpacityMask="{DynamicResource minimizeImage}">
                                                    </Border>
                                                </Grid>
                                            </Border>
                                            <Border x:Name="overlay"
                                                    Background="Transparent"
                                                    BorderBrush="Transparent"
                                                    BorderThickness="0"
                                                    Width="{TemplateBinding Width}"
                                                    Height="{TemplateBinding Height}"/>
                                        </Grid>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter TargetName="overlay" Property="BorderBrush" Value="{DynamicResource GrayThemeUI.Overlay.BorderBrush.MouseOver}"/>
                                                <Setter TargetName="overlay" Property="Background" Value="{DynamicResource GrayThemeUI.Overlay.Background.MouseOver}"/>
                                                <Setter TargetName="overlayMask" Property="Background" Value="{DynamicResource GrayThemeUI.Overlay.BorderBrush.MouseOver}"/>
                                            </Trigger>
                                            <Trigger Property="IsPressed" Value="True">
                                                <Setter TargetName="overlay" Property="BorderBrush" Value="{DynamicResource GrayThemeUI.Overlay.BorderBrush.Focus}"/>
                                                <Setter TargetName="overlay" Property="Background" Value="{DynamicResource GrayThemeUI.Overlay.Background.Focus}"/>
                                                <Setter TargetName="overlayMask" Property="Background" Value="{DynamicResource GrayThemeUI.Overlay.BorderBrush.Focus}"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </Button.Style>
                </Button>
            </Border>
            <Border x:Name="exitButton">
                <Button Background="Transparent" Click="Exit_Click" BorderThickness="0" 
                        Width="{StaticResource MainWindowHeaderHeight}"
                        Height="{StaticResource MainWindowHeaderHeight}">
                    <Button.Style>
                        <Style TargetType="Button">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="Button">
                                        <Grid>
                                            <Border x:Name="border" Background="Transparent"
                                                    BorderBrush="{TemplateBinding BorderBrush}"
                                                    BorderThickness="{TemplateBinding BorderThickness}"
                                                    Width="{TemplateBinding Width}"
                                                    Height="{TemplateBinding Height}">
                                                <Grid>
                                                    <Border x:Name="Mask"
                                                            Background="{TemplateBinding Foreground}"
                                                            Width="30"
                                                            Height="30"
                                                            OpacityMask="{DynamicResource cancelImage}">
                                                    </Border>
                                                    <Border x:Name="overlayMask"
                                                            Background="{DynamicResource GrayThemeUI.Overlay.BorderBrush.Default}"
                                                            Width="30"
                                                            Height="30"
                                                            OpacityMask="{DynamicResource cancelImage}">
                                                    </Border>
                                                </Grid>
                                            </Border>
                                            <Border x:Name="overlay"
                                                    Background="Transparent"
                                                    BorderBrush="Transparent"
                                                    BorderThickness="0"
                                                    Width="{TemplateBinding Width}"
                                                    Height="{TemplateBinding Height}"/>
                                        </Grid>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter TargetName="overlay" Property="BorderBrush" Value="{DynamicResource GrayThemeUI.Overlay.BorderBrush.MouseOver}"/>
                                                <Setter TargetName="overlay" Property="Background" Value="{DynamicResource GrayThemeUI.Overlay.Background.MouseOver}"/>
                                                <Setter TargetName="overlayMask" Property="Background" Value="{DynamicResource GrayThemeUI.Overlay.BorderBrush.MouseOver}"/>
                                            </Trigger>
                                            <Trigger Property="IsPressed" Value="True">
                                                <Setter TargetName="overlay" Property="BorderBrush" Value="{DynamicResource GrayThemeUI.Overlay.BorderBrush.Focus}"/>
                                                <Setter TargetName="overlay" Property="Background" Value="{DynamicResource GrayThemeUI.Overlay.Background.Focus}"/>
                                                <Setter TargetName="overlayMask" Property="Background" Value="{DynamicResource GrayThemeUI.Overlay.BorderBrush.Focus}"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </Button.Style>
                </Button>
            </Border>
        </StackPanel>
        
        


    </Grid>
</UserControl>
